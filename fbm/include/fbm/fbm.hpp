#pragma once
#include <vector>
namespace fbm {

//! Generate a fractional Brownian bridge in 3D.
//!
//! @param H the Hurst index (should be between 0 and 1, non-inclusive)
//!
//! @param nx the number of cells in each direction
//!
//! @param X should have (nx+1)^3 uniform random numbers (can be generated by say
//!          \code{.cpp}
//!          fbm::generate_normal_random(nx*nx*nx)
//!          \endcode)
//!
//! @returns a (nx+1)^3 array of fractional Brownian bridge. Sides are equal to
//! zero.
std::vector<double> fractional_brownian_bridge_3d(double H, int nx,
    const std::vector<double>& X);


void
fractional_brownian_bridge_3d(double* data_out, double H, int nx,
    const double* X);
}

#include "fbm/impl/fbm_inl.hpp"
